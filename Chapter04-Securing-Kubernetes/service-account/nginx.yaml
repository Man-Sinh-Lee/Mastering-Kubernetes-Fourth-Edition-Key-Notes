apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccount: my-service-account
      volumes:
        - name: share-volume
          emptyDir: {}
      initContainers:
        - name: busybox
          image: busybox
          command:
            [
              "sh",
              "-c",
              'echo "<html><center><h1><span>$HOSTNAME is up and running</span></h1></center></html>" >/data/html/index.html',
            ]
          volumeMounts:
            - name: share-volume
              mountPath: /data/html
      containers:
        - image: nginx:stable-alpine
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: share-volume
              mountPath: /usr/share/nginx/html
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx
  type: LoadBalancer
status:
  loadBalancer: {}
